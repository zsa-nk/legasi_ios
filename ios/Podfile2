def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'


node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '13.0'
# platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

production = ENV["PRODUCTION"] == "1"


linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

setup_permissions([
  'AppTrackingTransparency',
  'Bluetooth',
  'Calendars',
  'CalendarsWriteOnly',
  'Camera',
  'Contacts',
  'FaceID',
  'LocationAccuracy',
  'LocationAlways',
  'LocationWhenInUse',
  'MediaLibrary',
  'Microphone',
  'Motion',
  'Notifications',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  'Reminders',
  # 'Siri',
  'SpeechRecognition',
  'StoreKit',
])


target 'simpegbkpsdm' do
  config = use_native_modules!
  # Install RNPermissions pod
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :production => production,
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => FlipperConfiguration.disabled,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'simpegbkpsdmTests' do
    inherit! :complete
    # Pods for testing
  end


  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Post install configuration
  post_install do |installer|
    react_native_post_install(installer)
  end
  

  #   use_react_native!(
  #   :path => config[:reactNativePath],
  #   # An absolute path to your application root.
  #   :app_path => "#{Pod::Config.instance.installation_root}/.."
  # )

#   post_install do |installer|
#     # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
#     react_native_post_install(
#       installer,
#       config[:reactNativePath],
#       :mac_catalyst_enabled => false,
#       # :ccache_enabled => true
#     )
#   end

end


# def node_require(script)
#   # Resolve script with node to allow for hoisting
#   require Pod::Executable.execute_command('node', ['-p',
#     "require.resolve(
#       '#{script}',
#       {paths: [process.argv[1]]},
#     )", __dir__]).strip
# end

# node_require('react-native/scripts/react_native_pods.rb')
# node_require('react-native-permissions/scripts/setup.rb')

# platform :ios, '12.4'
# # prepare_react_native_project!

# setup_permissions([
#   'AppTrackingTransparency',
#   'Bluetooth',
#   'Calendars',
#   'CalendarsWriteOnly',
#   'Camera',
#   'Contacts',
#   'FaceID',
#   'LocationAccuracy',
#   'LocationAlways',
#   'LocationWhenInUse',
#   'MediaLibrary',
#   'Microphone',
#   'Motion',
#   'Notifications',
#   'PhotoLibrary',
#   'PhotoLibraryAddOnly',
#   'Reminders',
#   # 'Siri',
#   'SpeechRecognition',
#   'StoreKit',
# ])

# linkage = ENV['USE_FRAMEWORKS']
# if linkage != nil
#   Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#   use_frameworks! :linkage => linkage.to_sym
# end

# target 'simpegbkpsdm' do
#   config = use_native_modules!

#   use_react_native!(
#     :path => config[:reactNativePath],
#     # An absolute path to your application root.
#     :app_path => "#{Pod::Config.instance.installation_root}/.."
#   )

#   post_install do |installer|
#     # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
#     react_native_post_install(
#       installer,
#       config[:reactNativePath],
#       :mac_catalyst_enabled => false,
#       # :ccache_enabled => true
#     )
#   end
# end